//----------------------------------------------------------------------//
// CheckBook                                       [created 10.17.2010] //
// Copyright (c) 2011 - Justin Hoffman                                  //
//----------------------------------------------------------------------//

import Krypton.Collections.List;


namespace CheckBook.Models { 


	// @descrip Information about a single account
	internal class AccountModel {


		// @descrip Identifyer for this account
		public string ID;


		// @descrip Label to show user for this account
		public string Label;


		// @descrip Index of this account
		public int Index;


		// @descrip Balance according to the last reconciliation
		public int ReconciledBalance;

		
		// @descrip Current supposed balance of the account
		public int ActualBalance;


		// @descrip Adds a transaction to this account
		// @param amount Amount of the transaction
		// @param isReconciled True if transaction is reconciled, false if not
		public void AddTransaction(int amount, bool isReconciled) {
			ActualBalance += amount;
			if(isReconciled) {
				ReconciledBalance += amount;
			}
		}      


		// @descrip Clears the balances in a set of accounts
		// @param accounts List of accounts to clear the balances of
		public static void ClearBalances(List accounts) {
			for(int i = 0; i < accounts.Count; i++) {
				AccountModel a = AccountModel(accounts[i]);
				a.ReconciledBalance = 0;
				a.ActualBalance = 0;
			}
		}
	}
}
